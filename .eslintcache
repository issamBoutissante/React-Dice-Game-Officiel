[{"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\index.js":"1","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\App.js":"2","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\OnlinePlay\\OnlinePlay.js":"3","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\OnlinePlay\\JoinGame\\JoinGame.js":"4","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\OnlinePlay\\StartNewGame\\StartNewGame.js":"5","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Dialog\\Dialog.js":"6","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\InfoContext\\InfoContext.js":"7","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\Game\\Game.js":"8","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\testGame.js":"9","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\GameScreen2.js":"10"},{"size":447,"mtime":1607358774976,"results":"11","hashOfConfig":"12"},{"size":344,"mtime":1607614332733,"results":"13","hashOfConfig":"12"},{"size":858,"mtime":1607790870913,"results":"14","hashOfConfig":"12"},{"size":1694,"mtime":1607689013512,"results":"15","hashOfConfig":"12"},{"size":1941,"mtime":1607688719552,"results":"16","hashOfConfig":"12"},{"size":321,"mtime":1607448589945,"results":"17","hashOfConfig":"12"},{"size":880,"mtime":1607685449872,"results":"18","hashOfConfig":"12"},{"size":1610,"mtime":1607707067193,"results":"19","hashOfConfig":"12"},{"size":3346,"mtime":1607711981854,"results":"20","hashOfConfig":"12"},{"size":5198,"mtime":1607798746111,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zjs1xo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\index.js",[],["48","49"],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\App.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\OnlinePlay\\OnlinePlay.js",["50","51"],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\OnlinePlay\\JoinGame\\JoinGame.js",["52","53"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { InfoContext } from \"../../InfoContext/InfoContext\";\r\n\r\nexport default function JoinGame() {\r\n  const {\r\n    setRoomId,\r\n    Socket,\r\n    RoomId,\r\n    setFriendName,\r\n    setHosterName,\r\n    FriendName,\r\n    HosterName,\r\n  } = useContext(InfoContext);\r\n  const [showGame, setShowGame] = useState(false);\r\n  useEffect(() => {\r\n    Socket.on(\"GameStarted\", ({ hosterName }) => {\r\n      setHosterName(hosterName);\r\n      setShowGame(true);\r\n      //window.location.href = `/GameScreen?friendName=${friendName}&hosterName=${hosterName}`;\r\n    });\r\n  }, []);\r\n  const onJoinGameHandler = () => {\r\n    Socket.on(\"requestAccepted\", ({ confirmPassword }) => {\r\n      Socket.emit(\"joinAndStartGame\", { confirmPassword });\r\n    });\r\n    Socket.on(\"requestError\", ({ error }) => {\r\n      alert(error);\r\n      Socket.emit(\"leave\", { roomId: RoomId });\r\n    });\r\n    Socket.emit(\r\n      \"joinGame\",\r\n      { name: FriendName, roomId: RoomId },\r\n      ({ error }) => {\r\n        if (error) alert(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"enter you name\"\r\n        onChange={(e) => {\r\n          setFriendName(e.target.value);\r\n        }}\r\n      ></input>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"enter the game id\"\r\n        onChange={(e) => {\r\n          setRoomId(e.target.value);\r\n        }}\r\n      ></input>\r\n      <button onClick={onJoinGameHandler}>Join</button>\r\n      <NavLink to=\"/\"> Back</NavLink>\r\n      {showGame ? <Redirect to={\"/GameScreen\"}></Redirect> : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\OnlinePlay\\StartNewGame\\StartNewGame.js",["54","55"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport Dialog from \"../../Dialog/Dialog\";\r\nimport { InfoContext } from \"../../InfoContext/InfoContext\";\r\n\r\nexport default function StartNewGame() {\r\n  const {\r\n    setRoomId,\r\n    Socket,\r\n    RoomId,\r\n    setHosterName,\r\n    setFriendName,\r\n    HosterName,\r\n    FriendName,\r\n  } = useContext(InfoContext);\r\n  const [showId, setShowId] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [FriendId, setFriendId] = useState(\"\");\r\n  const [showGame, setShowGame] = useState(false);\r\n  useEffect(() => {\r\n    Socket.on(\"GameStarted\", ({ friendName }) => {\r\n      setShowGame(true);\r\n      //window.location.href = `/GameScreen?friendName=${friendName}&hosterName=${hosterName}&Socket=${Socket}&roomId=${RoomId}`;\r\n    });\r\n  }, []);\r\n  const onAnswerHandler = (isAccepted) => {\r\n    Socket.emit(\"requestAnswer\", {\r\n      isAccepted,\r\n      name: HosterName,\r\n      nameId: FriendId,\r\n    });\r\n  };\r\n  const onStartNewGameHandler = () => {\r\n    Socket.emit(\"startNewGame\", { name: HosterName }, ({ roomId }) => {\r\n      setRoomId(roomId);\r\n      setShowId(true);\r\n      Socket.on(\"joinRequest\", ({ name, nameId }) => {\r\n        setFriendName(name);\r\n        setFriendId(nameId);\r\n        setShowDialog(true);\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"enter you name\"\r\n        onChange={(e) => setHosterName(e.target.value)}\r\n      ></input>\r\n      <button onClick={onStartNewGameHandler}>Start Game</button>\r\n      <NavLink to=\"/\"> Back</NavLink>\r\n      {showId ? (\r\n        <input type=\"text\" value={`this is your id : ${RoomId}`}></input>\r\n      ) : null}\r\n      {showDialog ? <Dialog onAnswerHandler={onAnswerHandler}></Dialog> : null}\r\n      {showGame ? <Redirect to={\"/GameScreen\"}></Redirect> : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Dialog\\Dialog.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\InfoContext\\InfoContext.js",["56"],"import React, { useState, createContext, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nexport const InfoContext = createContext();\r\nconst InfoContextProvider = ({ children }) => {\r\n  const [Socket, setSocket] = useState(io(\"http://localhost:5000\"));\r\n  const [RoomId, setRoomId] = useState(\"\");\r\n  const [HosterName, setHosterName] = useState(\"\");\r\n  const [FriendName, setFriendName] = useState(\"\");\r\n  useEffect(() => {\r\n    console.log(\r\n      \"===================================================================================\"\r\n    );\r\n  }, []);\r\n  return (\r\n    <InfoContext.Provider\r\n      value={{\r\n        Socket,\r\n        RoomId,\r\n        setRoomId,\r\n        setHosterName,\r\n        HosterName,\r\n        setFriendName,\r\n        FriendName,\r\n      }}\r\n    >\r\n      {children}\r\n    </InfoContext.Provider>\r\n  );\r\n};\r\nexport default InfoContextProvider;\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\Game\\Game.js",["57"],"import React, { useEffect } from \"react\";\r\nconst Game = ({\r\n  player1,\r\n  player2,\r\n  player1Score,\r\n  player2Score,\r\n  player1Total,\r\n  player2Total,\r\n  onRollDiceHandler,\r\n  onHoldHandler,\r\n  randomNumber,\r\n  player1StyleRef,\r\n  player2StyleRef,\r\n}) => {\r\n  return (\r\n    <section className=\"GameContainer\">\r\n      <section className=\"GameScene\">\r\n        <section ref={player1StyleRef} className=\"player1 player activePlayer\">\r\n          <section className=\"GessedNumberArea\">\r\n            <h1>{player1}</h1>\r\n            <h1 className=\"total_1 number\">{player1Total}</h1>\r\n          </section>\r\n          <section className=\"playerPoints\">\r\n            <p>current</p>\r\n            <h1 className=\"current_1\">{player1Score}</h1>\r\n          </section>\r\n        </section>\r\n        <div className=\"buttons Buttons above newGame\">New Game</div>\r\n        <div className=\"buttons image\">{randomNumber}</div>\r\n        <div className=\"buttons Buttons rollDice\" onClick={onRollDiceHandler}>\r\n          Roll Dice\r\n        </div>\r\n        <div className=\"buttons Buttons below hold\" onClick={onHoldHandler}>\r\n          Hold\r\n        </div>\r\n        <section ref={player2StyleRef} className=\"player2 player\">\r\n          <section className=\"GessedNumberArea\">\r\n            <h1>{player2}</h1>\r\n            <h1 className=\"total_2 number\">{player2Total}</h1>\r\n          </section>\r\n          <section className=\"playerPoints\">\r\n            <p>current</p>\r\n            <h1 className=\"current_2\">{player2Score}</h1>\r\n          </section>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\nexport default Game;\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\testGame.js",["58","59","60","61","62","63","64"],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  Component,\r\n  useRef,\r\n} from \"react\";\r\nimport \"./GameScreen.css\";\r\nimport { InfoContext } from \"../InfoContext/InfoContext\";\r\nimport Game from \"./Game/Game\";\r\n\r\nexport default function GameScreen(props) {\r\n  const { Socket, RoomId, HosterName, FriendName } = useContext(InfoContext);\r\n  const [finalScore, setFinalScore] = useState(15);\r\n  const [player1] = useState(HosterName);\r\n  const [player2] = useState(FriendName);\r\n  const [randomNumber, setRandomNumber] = useState(0);\r\n  const [currentPlayer, setCurrentPlayer] = useState(HosterName);\r\n  const [player1Total, setPlayer1Total] = useState(0);\r\n  const [player2Total, setPlayer2Total] = useState(0);\r\n  const [player1Score, setPlayer1Score] = useState(0);\r\n  const [player2Score, setPlayer2Score] = useState(0);\r\n  const player1StyleRef = useRef(null);\r\n  const player2StyleRef = useRef(null);\r\n  //here we initialize our listeners to the server\r\n  useEffect(() => {\r\n    Socket.on(\"DiceRolled\", ({ ranNum }) => {\r\n      setRandomNumber(ranNum);\r\n      if (ranNum === 1) {\r\n        //Here we have to add a sound for losing score\r\n        //and vibre the cube\r\n        TogglePlayer();\r\n        setPlayer1Score(0);\r\n        setPlayer2Score(0);\r\n      } else {\r\n        if (currentPlayer === player1) {\r\n          setPlayer1Score((prev) => prev + ranNum);\r\n        } else if (currentPlayer == player2) {\r\n          setPlayer2Score((prev) => prev + ranNum);\r\n        }\r\n      }\r\n    });\r\n    Socket.on(\"ScoreHolded\", ({ score }) => {\r\n      if (currentPlayer === player1) {\r\n        setPlayer1Total((prev) => prev + score);\r\n      } else {\r\n        setPlayer2Total((prev) => prev + score);\r\n      }\r\n      TogglePlayer();\r\n      setPlayer1Score(0);\r\n      setPlayer2Score(0);\r\n    });\r\n  }, []);\r\n  //this player will toggle players and their style\r\n  const TogglePlayer = () => {\r\n    if (currentPlayer === player1) {\r\n      setCurrentPlayer(player2);\r\n      player2StyleRef.current.classList.add(\"activePlayer\");\r\n      player1StyleRef.current.classList.remove(\"activePlayer\");\r\n    } else if (currentPlayer == player2) {\r\n      setCurrentPlayer(player1);\r\n      player1StyleRef.current.classList.add(\"activePlayer\");\r\n      player2StyleRef.current.classList.remove(\"activePlayer\");\r\n    }\r\n  };\r\n  const onRollDiceHandler = () => {\r\n    Socket.emit(\"RollDice\", { roomId: RoomId });\r\n  };\r\n  const CheckWinner = (winner) => {\r\n    if (player1Total >= finalScore) {\r\n      player1StyleRef.current.classList.add(\"winer\");\r\n    } else if (player2Total >= finalScore) {\r\n      player2StyleRef.current.classList.add(\"winer\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    CheckWinner();\r\n  }, [player1Total, player2Total]);\r\n  const onHoldHandler = () => {\r\n    currentPlayer == player1\r\n      ? Socket.emit(\"Hold\", { score: player1Score })\r\n      : Socket.emit(\"Hold\", { score: player2Score });\r\n  };\r\n\r\n  return (\r\n    <Game\r\n      player1={player1}\r\n      player2={player2}\r\n      player1Score={player1Score}\r\n      player2Score={player2Score}\r\n      player1Total={player1Total}\r\n      player2Total={player2Total}\r\n      randomNumber={randomNumber}\r\n      onRollDiceHandler={onRollDiceHandler}\r\n      onHoldHandler={onHoldHandler}\r\n      player1StyleRef={player1StyleRef}\r\n      player2StyleRef={player2StyleRef}\r\n    ></Game>\r\n  );\r\n}\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\GameScreen2.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":37},{"ruleId":"69","severity":1,"message":"74","line":13,"column":5,"nodeType":"71","messageId":"72","endLine":13,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":22,"column":6,"nodeType":"77","endLine":22,"endColumn":8,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":14,"column":5,"nodeType":"71","messageId":"72","endLine":14,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":25,"column":6,"nodeType":"77","endLine":25,"endColumn":8,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"82","line":5,"column":18,"nodeType":"71","messageId":"72","endLine":5,"endColumn":27},{"ruleId":"69","severity":1,"message":"83","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"84","line":5,"column":3,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"85","line":14,"column":22,"nodeType":"71","messageId":"72","endLine":14,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":38,"column":34,"nodeType":"88","messageId":"89","endLine":38,"endColumn":36},{"ruleId":"75","severity":1,"message":"90","line":53,"column":6,"nodeType":"77","endLine":53,"endColumn":8,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"87","line":60,"column":30,"nodeType":"88","messageId":"89","endLine":60,"endColumn":32},{"ruleId":"75","severity":1,"message":"92","line":78,"column":6,"nodeType":"77","endLine":78,"endColumn":34,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"87","line":80,"column":19,"nodeType":"88","messageId":"89","endLine":80,"endColumn":21},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'HosterName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Socket' and 'setHosterName'. Either include them or remove the dependency array.","ArrayExpression",["96"],"'FriendName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Socket'. Either include it or remove the dependency array.",["97"],"'setSocket' is assigned a value but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","'setFinalScore' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'Socket', 'TogglePlayer', 'currentPlayer', 'player1', and 'player2'. Either include them or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'CheckWinner'. Either include it or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [Socket, setHosterName]",{"range":"108","text":"109"},"Update the dependencies array to be: [Socket]",{"range":"110","text":"111"},"Update the dependencies array to be: [Socket, TogglePlayer, currentPlayer, player1, player2]",{"range":"112","text":"113"},"Update the dependencies array to be: [CheckWinner, player1Total, player2Total]",{"range":"114","text":"115"},[677,679],"[Socket, setHosterName]",[877,879],"[Socket]",[1807,1809],"[Socket, TogglePlayer, currentPlayer, player1, player2]",[2699,2727],"[CheckWinner, player1Total, player2Total]"]