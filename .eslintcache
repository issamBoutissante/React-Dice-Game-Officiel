[{"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\index.js":"1","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\App.js":"2","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Dialog\\Dialog.js":"3","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\GameScreen.js":"4","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Router.js":"5","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\InfoContext\\InfoContext.js":"6","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreenOffline\\GameScreenOffline.js":"7","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\HomeScreen.js":"8","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Game\\Game.js":"9","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Game\\WinnerLayout\\WinnerLayout.js":"10","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\CloseAppIcon\\CloseAppIcon.js":"11","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\HomeScreenDice\\HomeScreenDice.js":"12","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\StartNewGame\\StartNewGame.js":"13","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\JoinGame\\JoinGame.js":"14","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\InfoModal\\InfoModal.js":"15","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\PlayOffline\\PlayOffline.js":"16","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\ErrorModal\\ErrorModal.js":"17","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\RequestModal\\RequestModal.js":"18","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\Modal\\Modal.js":"19","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Game\\GameDice\\GameDice.js":"20","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\LittleCube\\LittleCube.js":"21","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\MessageArea\\MessageArea.js":"22"},{"size":206,"mtime":1608470319203,"results":"23","hashOfConfig":"24"},{"size":344,"mtime":1607614332733,"results":"25","hashOfConfig":"26"},{"size":935,"mtime":1608810147349,"results":"27","hashOfConfig":"24"},{"size":8159,"mtime":1608750076246,"results":"28","hashOfConfig":"24"},{"size":836,"mtime":1608470802695,"results":"29","hashOfConfig":"24"},{"size":903,"mtime":1608808856775,"results":"30","hashOfConfig":"24"},{"size":7342,"mtime":1608744971056,"results":"31","hashOfConfig":"24"},{"size":6244,"mtime":1608760405467,"results":"32","hashOfConfig":"24"},{"size":6153,"mtime":1608760105507,"results":"33","hashOfConfig":"24"},{"size":4769,"mtime":1608744240804,"results":"34","hashOfConfig":"24"},{"size":366,"mtime":1608462747264,"results":"35","hashOfConfig":"24"},{"size":1255,"mtime":1608232451795,"results":"36","hashOfConfig":"24"},{"size":2574,"mtime":1608742963504,"results":"37","hashOfConfig":"24"},{"size":1612,"mtime":1608743046012,"results":"38","hashOfConfig":"24"},{"size":1049,"mtime":1608742720309,"results":"39","hashOfConfig":"24"},{"size":1382,"mtime":1608743116512,"results":"40","hashOfConfig":"24"},{"size":499,"mtime":1608743185238,"results":"41","hashOfConfig":"24"},{"size":888,"mtime":1608743306699,"results":"42","hashOfConfig":"24"},{"size":644,"mtime":1608742555989,"results":"43","hashOfConfig":"24"},{"size":1648,"mtime":1608374611232,"results":"44","hashOfConfig":"24"},{"size":1677,"mtime":1608240132369,"results":"45","hashOfConfig":"24"},{"size":1830,"mtime":1608731685139,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1bjg237",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"zjs1xo",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\index.js",[],["103","104"],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\App.js",[],["105","106"],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Dialog\\Dialog.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\GameScreen.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Router.js",["107"],"import React from \"react\";\r\nimport InfoContextProvider from \"./InfoContext/InfoContext\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\nimport HomeScreen from \"./Components/HomeScreen/HomeScreen\";\r\nimport GameScreen from \"./Components/GameScreen/GameScreen\";\r\nimport GameScreenOffline from \"./Components/GameScreenOffline/GameScreenOffline\";\r\n\r\nfunction App() {\r\n  return (\r\n    <InfoContextProvider>\r\n      <div>\r\n        <BrowserRouter>\r\n          <Route path=\"/\" exact component={HomeScreen} />\r\n          <Route path=\"/GameScreen\" exact component={GameScreen}></Route>\r\n          <Route\r\n            path=\"/GameScreenOffline\"\r\n            exact\r\n            component={GameScreenOffline}\r\n          ></Route>\r\n        </BrowserRouter>\r\n      </div>\r\n    </InfoContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\InfoContext\\InfoContext.js",["108"],"import React, { useState, createContext } from \"react\";\r\nimport io from \"socket.io-client\";\r\nexport const InfoContext = createContext();\r\nconst InfoContextProvider = ({ children }) => {\r\n  const [isHoster, setIsHoster] = useState(false);\r\n  const [Socket, setSocket] = useState(io(\"http://localhost:5000\"));\r\n  const [RoomId, setRoomId] = useState(\"\");\r\n  const [HosterName, setHosterName] = useState(\"\");\r\n  const [FriendName, setFriendName] = useState(\"\");\r\n  const [FriendId, setFriendId] = useState(\"\");\r\n\r\n  return (\r\n    <InfoContext.Provider\r\n      value={{\r\n        Socket,\r\n        RoomId,\r\n        setRoomId,\r\n        setHosterName,\r\n        HosterName,\r\n        setFriendName,\r\n        FriendName,\r\n        isHoster,\r\n        setIsHoster,\r\n        FriendId,\r\n        setFriendId,\r\n      }}\r\n    >\r\n      {children}\r\n    </InfoContext.Provider>\r\n  );\r\n};\r\nexport default InfoContextProvider;\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreenOffline\\GameScreenOffline.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\HomeScreen.js",["109"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport CloseAppIcon from \"./CloseAppIcon/CloseAppIcon\";\r\nimport HomeScreenDice from \"./HomeScreenDice/HomeScreenDice\";\r\nimport StartNewGame from \"./StartNewGame/StartNewGame\";\r\nimport JoinGame from \"./JoinGame/JoinGame\";\r\nimport PlayOffline from \"./PlayOffline/PlayOffline\";\r\nimport \"./HomeScreen.css\";\r\nimport InfoModal from \"./InfoModal/InfoModal\";\r\nimport { InfoContext } from \"../../InfoContext/InfoContext\";\r\nimport ErrorModal from \"./ErrorModal/ErrorModal\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport RequestJoinModal from \"./RequestModal/RequestModal\";\r\nimport Dialog from \"../Dialog/Dialog\";\r\nimport clickSound from \"../../assets/clickSound.mp3\";\r\nlet clickAudio = new Audio(clickSound);\r\n\r\nconst HomeScreen = () => {\r\n  const {\r\n    Socket,\r\n    RoomId,\r\n    isHoster,\r\n    setHosterName,\r\n    setFriendName,\r\n    setFriendId,\r\n    FriendId,\r\n    HosterName,\r\n    FriendName,\r\n  } = useContext(InfoContext);\r\n  const onlineRef = useRef(null);\r\n  const offlineRef = useRef(null);\r\n  const [showNewGame, setshowNewGame] = useState(false);\r\n  const [showJoinGame, setShowJoinGame] = useState(false);\r\n  const [showPlayOffline, setshowPlayOffline] = useState(false);\r\n  const [showInfoModal, setShowInfoModal] = useState(false);\r\n  const [showRequestJoin, setShowRequestJoin] = useState(false);\r\n  const [Error, setError] = useState(\"Something Wrong Happend!!!\");\r\n  const [showError, setShowError] = useState(false);\r\n  const [showGame, setShowGame] = useState(false);\r\n  const [showCloseDialog, setShowCloseDialog] = useState(false);\r\n\r\n  const onGoOnlineHandler = () => {\r\n    clickAudio.play();\r\n    onlineRef.current.style.display = \"block\";\r\n    offlineRef.current.style.display = \"none\";\r\n  };\r\n  const onGoOfflineHandler = () => {\r\n    clickAudio.play();\r\n    offlineRef.current.style.display = \"block\";\r\n    onlineRef.current.style.display = \"none\";\r\n  };\r\n  const onNewGameHandler = () => {\r\n    clickAudio.play();\r\n    setshowNewGame(true);\r\n  };\r\n  const onJoinGameHandler = () => {\r\n    clickAudio.play();\r\n    setShowJoinGame(true);\r\n  };\r\n  const onPlayHandlerOffline = () => {\r\n    clickAudio.play();\r\n    setshowPlayOffline(true);\r\n  };\r\n  const onAnswerHandler = (isAccepted) => {\r\n    clickAudio.play();\r\n    Socket.emit(\"requestAnswer\", {\r\n      isAccepted,\r\n      name: HosterName,\r\n      nameId: FriendId,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    Socket.on(\"requestAccepted\", ({ confirmPassword }) => {\r\n      Socket.emit(\"joinAndStartGame\", { confirmPassword });\r\n    });\r\n    Socket.on(\"requestError\", ({ error }) => {\r\n      setError(error);\r\n      setShowError(true);\r\n      Socket.emit(\"leave\", { roomId: RoomId });\r\n    });\r\n    Socket.on(\"GameStarted\", ({ hosterName, frienName }) => {\r\n      if (isHoster) {\r\n        setFriendName(frienName);\r\n      } else {\r\n        setHosterName(hosterName);\r\n      }\r\n      setShowGame(true);\r\n    });\r\n    Socket.on(\"joinRequest\", ({ name, nameId }) => {\r\n      setFriendName(name);\r\n      setFriendId(nameId);\r\n      setShowRequestJoin(true);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div class=\"container\">\r\n        <CloseAppIcon\r\n          setShowCloseDialog={() => {\r\n            clickAudio.play();\r\n            setShowCloseDialog(true);\r\n          }}\r\n        ></CloseAppIcon>\r\n        <div\r\n          class=\"info-icon\"\r\n          id=\"Info\"\r\n          onClick={() => {\r\n            clickAudio.play();\r\n            setShowInfoModal(true);\r\n          }}\r\n        >\r\n          <i class=\"fas fa-info-circle\"></i>\r\n        </div>\r\n        <header class=\"nav\">\r\n          <div class=\"logo\">\r\n            <span class=\"Logo-text\" style={{ marginLeft: \"20px\" }}>\r\n              Dice Game\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"buttons\">\r\n            <button class=\"btn btn1\" onClick={onGoOnlineHandler}>\r\n              Online\r\n            </button>\r\n            <button class=\"btn btn2\" onClick={onGoOfflineHandler}>\r\n              Offline\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <div class=\"sides\">\r\n          <div class=\"side1\">\r\n            <div class=\"btn-online\" ref={onlineRef}>\r\n              <button class=\"btn\" onClick={onNewGameHandler}>\r\n                New Game\r\n              </button>\r\n              <button class=\"btn\" onClick={onJoinGameHandler}>\r\n                Join Game\r\n              </button>\r\n            </div>\r\n            <div class=\"btn-offline\" ref={offlineRef}>\r\n              <button class=\"btn\" onClick={onPlayHandlerOffline}>\r\n                Play\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"side2\">\r\n            <HomeScreenDice></HomeScreenDice>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNewGame ? (\r\n        <StartNewGame\r\n          clickAudio={clickAudio}\r\n          CloseModal={() => setshowNewGame(false)}\r\n        ></StartNewGame>\r\n      ) : null}\r\n      {showJoinGame ? (\r\n        <JoinGame\r\n          clickAudio={clickAudio}\r\n          CloseModal={() => setShowJoinGame(false)}\r\n        ></JoinGame>\r\n      ) : null}\r\n      {showPlayOffline ? (\r\n        <PlayOffline\r\n          clickAudio={clickAudio}\r\n          CloseModal={() => setshowPlayOffline(false)}\r\n        ></PlayOffline>\r\n      ) : null}\r\n      {showInfoModal ? (\r\n        <InfoModal CloseModal={() => setShowInfoModal(false)}></InfoModal>\r\n      ) : null}\r\n      {showError ? (\r\n        <ErrorModal\r\n          clickAudio={clickAudio}\r\n          error={Error}\r\n          CloseModal={() => setShowError(false)}\r\n        ></ErrorModal>\r\n      ) : null}\r\n      {showGame ? <Redirect to=\"/GameScreen\"></Redirect> : null}\r\n      {showRequestJoin ? (\r\n        <RequestJoinModal\r\n          clickAudio={clickAudio}\r\n          onAnswerHandler={onAnswerHandler}\r\n          CloseModal={() => {\r\n            setShowRequestJoin(false);\r\n          }}\r\n          friendName={FriendName}\r\n        ></RequestJoinModal>\r\n      ) : null}\r\n      {showCloseDialog ? (\r\n        <Dialog\r\n          clickAudio={clickAudio}\r\n          CloseModal={() => {\r\n            setShowCloseDialog(false);\r\n          }}\r\n        ></Dialog>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default HomeScreen;\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Game\\Game.js",["110","111"],"import React, { Component } from \"react\";\r\nimport { InfoContext } from \"../../InfoContext/InfoContext\";\r\nimport Dice from \"./GameDice/GameDice\";\r\nimport \"./Game.css\";\r\nimport LittleCube from \"../LittleCube/LittleCube\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"../HomeScreen/Modal/Modal\";\r\nimport MessageArea from \"../GameScreen/MessageArea/MessageArea\";\r\nimport clickSound from \"../../assets/clickSound.mp3\";\r\nlet clickAudio = new Audio(clickSound);\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ChatRef = React.createRef();\r\n    this.ChatIconRef = React.createRef();\r\n    this.GameRef = React.createRef();\r\n  }\r\n  static contextType = InfoContext;\r\n  state = {\r\n    message: \"\",\r\n    messages: [],\r\n    BackToHome: false,\r\n    showDialogModal: false,\r\n    isMessageAreaOpen: false,\r\n    CountNewMessages: 0,\r\n  };\r\n  onSendMessageHandler() {\r\n    const { Socket, RoomId, isHoster } = this.context;\r\n    Socket.emit(\"SendMessage\", {\r\n      RoomId,\r\n      message: { Message: this.state.message, isHoster },\r\n    });\r\n    this.setState({ message: \"\" });\r\n  }\r\n  onNewMessageHandler({ message }) {\r\n    this.setState((prev) => {\r\n      return {\r\n        messages: [...prev.messages, message],\r\n      };\r\n    });\r\n    if (!this.state.isMessageAreaOpen) {\r\n      this.setState((prev) => {\r\n        return {\r\n          CountNewMessages: prev.CountNewMessages + 1,\r\n        };\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { Socket } = this.context;\r\n    Socket.on(\"NewMessage\", this.onNewMessageHandler.bind(this));\r\n  }\r\n  onBackToHomeHandler() {\r\n    //this.setState({ BackToHome: true });\r\n    document.location.replace(\"/\");\r\n  }\r\n  //this will open the messaging area\r\n  onOpenMessageArea() {\r\n    this.ChatRef.current.style.width = \"350px\";\r\n    this.toggleMessageAreaActive();\r\n  }\r\n  toggleMessageAreaActive() {\r\n    this.setState((prev) => {\r\n      return {\r\n        isMessageAreaOpen: prev.isMessageAreaOpen ? false : true,\r\n        CountNewMessages: 0,\r\n      };\r\n    });\r\n  }\r\n  setMessageHandler(e) {\r\n    this.setState({ message: e.target.value });\r\n  }\r\n  render() {\r\n    const {\r\n      player1,\r\n      player2,\r\n      player1Score,\r\n      player2Score,\r\n      player1Total,\r\n      player2Total,\r\n      onRollDiceHandler,\r\n      onHoldHandler,\r\n      player1StyleRef,\r\n      player2StyleRef,\r\n      CubeRef,\r\n      onPlayAgainHandler,\r\n    } = this.props;\r\n    return (\r\n      <div ref={this.GameRef} className=\"GameNontainer\">\r\n        <div className=\"GameNav-container\">\r\n          <div className=\"chat-icon\">\r\n            <i\r\n              className=\"fas fa-arrow-circle-left back\"\r\n              onClick={() => {\r\n                clickAudio.play();\r\n                this.onBackToHomeHandler();\r\n              }}\r\n            ></i>\r\n            {this.props.showMessageIcon ? (\r\n              <>\r\n                <i\r\n                  ref={this.ChatIconRef}\r\n                  onClick={() => {\r\n                    clickAudio.play();\r\n                    this.onOpenMessageArea();\r\n                  }}\r\n                  className=\"fas fa-comments chat\"\r\n                ></i>\r\n                {this.state.CountNewMessages != 0 ? (\r\n                  <span className=\"newMessages\">\r\n                    {this.state.CountNewMessages}\r\n                  </span>\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div\r\n            className=\"goNewGame\"\r\n            onClick={() => {\r\n              clickAudio.play();\r\n              onPlayAgainHandler();\r\n            }}\r\n          >\r\n            <i className=\"far fa-plus-square\"></i>\r\n            <span>New Game</span>\r\n          </div>\r\n          <div\r\n            className=\"GameClose-icon\"\r\n            onClick={() => this.setState({ showDialogModal: true })}\r\n          ></div>\r\n        </div>\r\n        <div className=\"layout-container\">\r\n          <div className=\"side-container active\" ref={player1StyleRef}>\r\n            <div className=\"player-name\">\r\n              <span>{player1}</span>\r\n              <LittleCube></LittleCube>\r\n            </div>\r\n            <div className=\"total-point\">\r\n              <span id=\"total-score\">{player1Total} </span>\r\n            </div>\r\n            <div className=\"current-point\">\r\n              <span>Current</span>\r\n              <div>\r\n                <span id=\"current-score\">{player1Score}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"side-container notActive\" ref={player2StyleRef}>\r\n            <div className=\"player-name\">\r\n              <span>{player2}</span>\r\n              <LittleCube></LittleCube>\r\n            </div>\r\n            <div className=\"total-point\">\r\n              <span id=\"total-score\">{player2Total} </span>\r\n            </div>\r\n            <div className=\"current-point\">\r\n              <span>Current</span>\r\n              <div>\r\n                <span id=\"current-score\">{player2Score}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dice CubeRef={CubeRef} onRollDiceHandler={onRollDiceHandler}></Dice>\r\n        <div className=\"hold-container\">\r\n          <button\r\n            id=\"holdbtn\"\r\n            onClick={() => {\r\n              clickAudio.play();\r\n              onHoldHandler();\r\n            }}\r\n          >\r\n            HOLD\r\n          </button>\r\n        </div>\r\n        <MessageArea\r\n          ChatRef={this.ChatRef}\r\n          toggleMessageAreaActive={this.toggleMessageAreaActive.bind(this)}\r\n          messages={this.state.messages}\r\n          setMessageHandler={this.setMessageHandler.bind(this)}\r\n          message={this.state.message}\r\n          onSendMessageHandler={this.onSendMessageHandler.bind(this)}\r\n        ></MessageArea>\r\n        {/* i use this to back to home but i replaced it with documetn location */}\r\n        {/* {this.state.BackToHome ? <Redirect to=\"/\"></Redirect> : null} */}\r\n        {this.state.showDialogModal ? (\r\n          <Modal CloseModal={this.setState({ showDialogModal: false })}></Modal>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Game\\WinnerLayout\\WinnerLayout.js",["112","113","114"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport WinImage from \"../../../assets/win.png\";\r\nimport \"./WinnerLayout.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport clickSound from \"../../../assets/clickSound.mp3\";\r\nlet clickAudio = new Audio(clickSound);\r\n\r\nexport default function WinnerLayout({\r\n  winner,\r\n  onStartNewGameHandler,\r\n  CloseModal,\r\n}) {\r\n  const CanvasRef = useRef(null);\r\n  const [goBack, setGoBack] = useState(false);\r\n  const onBackToMenu = () => {\r\n    setGoBack(true);\r\n  };\r\n  useEffect(() => {\r\n    var ctx = CanvasRef.current.getContext(\"2d\");\r\n\r\n    var cwidth, cheight;\r\n    var shells = [];\r\n    var pass = [];\r\n\r\n    var colors = [\"#018bcc\", \"#018bcc\", \"#018bcc\", , \"#018bcc\", \"#018bcc\"];\r\n\r\n    window.onresize = function () {\r\n      reset();\r\n    };\r\n    reset();\r\n    function reset() {\r\n      cwidth = window.innerWidth;\r\n      cheight = window.innerHeight;\r\n      CanvasRef.current.width = cwidth;\r\n      CanvasRef.current.height = cheight;\r\n    }\r\n\r\n    function newShell() {\r\n      var left = Math.random() > 0.5;\r\n      var shell = {};\r\n      shell.x = 1 * left;\r\n      shell.y = 1;\r\n      shell.xoff = (0.01 + Math.random() * 0.007) * (left ? 1 : -1);\r\n      shell.yoff = 0.01 + Math.random() * 0.007;\r\n      shell.size = Math.random() * 6 + 3;\r\n      shell.color = colors[Math.floor(Math.random() * colors.length)];\r\n\r\n      shells.push(shell);\r\n    }\r\n    function newPass(shell) {\r\n      var pasCount = Math.ceil(Math.pow(shell.size, 2) * Math.PI);\r\n      for (let j = 0; j < pasCount; j++) {\r\n        var pas = {};\r\n        pas.x = shell.x * cwidth;\r\n        pas.y = shell.y * cheight;\r\n\r\n        var a = Math.random() * 4;\r\n        var s = Math.random() * 10;\r\n\r\n        pas.xoff = s * Math.sin((5 - a) * (Math.PI / 2));\r\n        pas.yoff = s * Math.sin(a * (Math.PI / 2));\r\n\r\n        pas.color = shell.color;\r\n        pas.size = Math.sqrt(shell.size);\r\n\r\n        if (pass.length < 1000) {\r\n          pass.push(pas);\r\n        }\r\n      }\r\n    }\r\n\r\n    var lastRun = 0;\r\n    Run();\r\n    function Run() {\r\n      var dt = 1;\r\n      if (lastRun != 0) {\r\n        dt = Math.min(50, performance.now() - lastRun);\r\n      }\r\n      lastRun = performance.now();\r\n\r\n      //ctx.clearRect(0, 0, cwidth, cheight);\r\n      ctx.fillStyle = \"rgba(255, 255, 255, 0.25)\";\r\n      ctx.fillRect(0, 0, cwidth, cheight);\r\n\r\n      if (shells.length < 10 && Math.random() > 0.96) {\r\n        newShell();\r\n      }\r\n\r\n      for (let ix in shells) {\r\n        var shell = shells[ix];\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          shell.x * cwidth,\r\n          shell.y * cheight,\r\n          shell.size,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.fillStyle = shell.color;\r\n        ctx.fill();\r\n\r\n        shell.x -= shell.xoff;\r\n        shell.y -= shell.yoff;\r\n        shell.xoff -= shell.xoff * dt * 0.001;\r\n        shell.yoff -= (shell.yoff + 0.2) * dt * 0.00005;\r\n\r\n        if (shell.yoff < -0.005) {\r\n          newPass(shell);\r\n          shells.splice(ix, 1);\r\n        }\r\n      }\r\n\r\n      for (let ix in pass) {\r\n        var pas = pass[ix];\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(pas.x, pas.y, pas.size, 0, 2 * Math.PI);\r\n        ctx.fillStyle = pas.color;\r\n        ctx.fill();\r\n\r\n        pas.x -= pas.xoff;\r\n        pas.y -= pas.yoff;\r\n        pas.xoff -= pas.xoff * dt * 0.001;\r\n        pas.yoff -= (pas.yoff + 5) * dt * 0.0005;\r\n        pas.size -= dt * 0.002 * Math.random();\r\n\r\n        if (pas.y > cheight || pas.y < -50 || pas.size <= 0) {\r\n          pass.splice(ix, 1);\r\n        }\r\n      }\r\n      requestAnimationFrame(Run);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* //  <!-- The Modal Info--> */}\r\n      <div className=\"modalWinner\">\r\n        {/* <!-- Modal content for Info --> */}\r\n        <div className=\"modal-win\">\r\n          <canvas id=\"Canvas\" ref={CanvasRef}>\r\n            {\" \"}\r\n          </canvas>\r\n          <img src={WinImage} />\r\n          <div id=\"winner-container\">\r\n            <span className=\"closeWin\" onClick={CloseModal}>\r\n              &times;\r\n            </span>\r\n            <span className=\"winner-name\">{winner} Wins!</span>\r\n            <div className=\"btnWin\">\r\n              <button\r\n                onClick={() => {\r\n                  clickAudio.play();\r\n                  onStartNewGameHandler();\r\n                }}\r\n              >\r\n                NEW GAME\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  clickAudio.play();\r\n                  onBackToMenu();\r\n                }}\r\n              >\r\n                START MENU\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {goBack ? <Redirect to=\"/\"></Redirect> : null}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\CloseAppIcon\\CloseAppIcon.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\HomeScreenDice\\HomeScreenDice.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\StartNewGame\\StartNewGame.js",["115"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./StartNewGame.css\";\r\nimport { InfoContext } from \"../../../InfoContext/InfoContext\";\r\n\r\nexport default function StartNewGame({ CloseModal, clickAudio }) {\r\n  const [showId, setShowId] = useState(false);\r\n  const RoomIdRef = useRef(null);\r\n  const ToolTipRef = useRef(null);\r\n  const {\r\n    setRoomId,\r\n    Socket,\r\n    RoomId,\r\n    setHosterName,\r\n    HosterName,\r\n    setIsHoster,\r\n  } = useContext(InfoContext);\r\n  useEffect(() => {\r\n    setIsHoster(true);\r\n  }, []);\r\n  const onStartNewGameHandler = () => {\r\n    Socket.emit(\"startNewGame\", { name: HosterName }, ({ roomId }) => {\r\n      setRoomId(roomId);\r\n      setShowId(true);\r\n    });\r\n  };\r\n  //this functions for copying\r\n  const onCopyHandler = () => {\r\n    RoomIdRef.current.select();\r\n    RoomIdRef.current.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n\r\n    ToolTipRef.current.innerHTML = \"Copied: \" + RoomIdRef.current.value;\r\n  };\r\n  const onOutHanlder = () => {\r\n    ToolTipRef.current.innerHTML = \"Copy to clipboard\";\r\n  };\r\n  return (\r\n    <>\r\n      <Modal CloseModal={CloseModal}>\r\n        {showId ? (\r\n          <div>\r\n            <label htmlFor=\"id\">Your ID is:</label>\r\n            <input type=\"text\" name=\"id\" ref={RoomIdRef} value={RoomId} />\r\n            <div className=\"tooltip\">\r\n              <i\r\n                className=\"far fa-clipboard\"\r\n                onClick={onCopyHandler}\r\n                onMouseOut={onOutHanlder}\r\n              >\r\n                <span className=\"tooltiptext\" ref={ToolTipRef}>\r\n                  Copy to clipboard\r\n                </span>\r\n              </i>\r\n            </div>\r\n            <h2 style={{ fontFamily: \"Luckiest Guy\", paddingLeft: \"10px\" }}>\r\n              Send this id to your friend to start Playing\r\n            </h2>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <label htmlFor=\"name\">Enter your name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              style={{ color: \"#50abf1\" }}\r\n              onChange={(e) => {\r\n                setHosterName(e.target.value);\r\n              }}\r\n              placeholder=\"Enter your name..\"\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                clickAudio.play();\r\n                onStartNewGameHandler();\r\n              }}\r\n            >\r\n              submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\JoinGame\\JoinGame.js",["116"],"import React, { useContext, useEffect } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { InfoContext } from \"../../../InfoContext/InfoContext\";\r\n\r\nexport default function JoinGame({ CloseModal, clickAudio }) {\r\n  const {\r\n    setRoomId,\r\n    Socket,\r\n    RoomId,\r\n    setFriendName,\r\n    FriendName,\r\n    setIsHoster,\r\n  } = useContext(InfoContext);\r\n  const onJoinGameHandler = () => {\r\n    Socket.emit(\r\n      \"joinGame\",\r\n      { name: FriendName, roomId: RoomId },\r\n      ({ error }) => {\r\n        if (error) alert(error);\r\n      }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    setIsHoster(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Modal height=\"50%\" CloseModal={CloseModal}>\r\n      <div id=\"name-container\">\r\n        <label htmlFor=\"name\">Enter your name:</label>\r\n        <input\r\n          autoComplete=\"false\"\r\n          type=\"text\"\r\n          style={{ color: \"#50abf1\" }}\r\n          name=\"name\"\r\n          id=\"name\"\r\n          onChange={(e) => setFriendName(e.target.value)}\r\n          placeholder=\"Enter your name..\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"name\">Enter Room ID:</label>\r\n        <input\r\n          autoComplete=\"false\"\r\n          type=\"text\"\r\n          style={{ color: \"#50abf1\" }}\r\n          name=\"id\"\r\n          id=\"roomID\"\r\n          onChange={(e) => {\r\n            setRoomId(e.target.value);\r\n          }}\r\n          placeholder=\"Enter Room ID..\"\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            clickAudio.play();\r\n            onJoinGameHandler();\r\n          }}\r\n        >\r\n          Join\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\InfoModal\\InfoModal.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\PlayOffline\\PlayOffline.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\ErrorModal\\ErrorModal.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\RequestModal\\RequestModal.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\HomeScreen\\Modal\\Modal.js",["117"],"import React, { useRef } from \"react\";\r\nimport \"./Modal.css\";\r\nimport clickSound from \"../../../assets/clickSound.mp3\";\r\nlet clickAudio = new Audio(clickSound);\r\n\r\nconst Modal = ({ children, height, CloseModal, width }) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-name\" style={{ height: height, width: width }}>\r\n        <span\r\n          className=\"close\"\r\n          onClick={() => {\r\n            clickAudio.play();\r\n            CloseModal();\r\n          }}\r\n        >\r\n          &times;\r\n        </span>\r\n        <div className=\"login\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\Game\\GameDice\\GameDice.js",["118"],"import React, { useRef } from \"react\";\r\nimport \"./GameDice.css\";\r\n\r\nconst Dice = ({ onRollDiceHandler, CubeRef }) => {\r\n  return (\r\n    <div class=\"cubeContainer\">\r\n      <div id=\"GameCube\" ref={CubeRef} onClick={onRollDiceHandler}>\r\n        <div class=\"GameSide GameFace1\">\r\n          <div class=\"GameDot1 GameDot\"></div>\r\n        </div>\r\n        <div class=\"GameSide GameFace2\">\r\n          <div class=\"GameDot1 GameDot\"></div>\r\n          <div class=\"GameDot2 GameDot\"></div>\r\n        </div>\r\n        <div class=\"GameSide GameFace3\">\r\n          <div class=\"GameDot1 GameDot\"></div>\r\n          <div class=\"GameDot2 GameDot\"></div>\r\n          <div class=\"GameDot3 GameDot\"></div>\r\n        </div>\r\n        <div class=\"GameSide GameFace4\">\r\n          <div class=\"GameDot1 GameDot\"></div>\r\n          <div class=\"GameDot2 GameDot\"></div>\r\n          <div class=\"GameDot3 GameDot\"></div>\r\n          <div class=\"GameDot4 GameDot\"></div>\r\n        </div>\r\n        <div class=\"GameSide GameFace5\">\r\n          <div class=\"GameDot1 GameDot\"></div>\r\n          <div class=\"GameDot2 GameDot\"></div>\r\n          <div class=\"GameDot3 GameDot\"></div>\r\n          <div class=\"GameDot4 GameDot\"></div>\r\n          <div class=\"GameDot5 GameDot\"></div>\r\n        </div>\r\n        <div class=\"GameSide GameFace6\">\r\n          <div class=\"GameDot1 GameDot\"></div>\r\n          <div class=\"GameDot2 GameDot\"></div>\r\n          <div class=\"GameDot3 GameDot\"></div>\r\n          <div class=\"GameDot4 GameDot\"></div>\r\n          <div class=\"GameDot5 GameDot\"></div>\r\n          <div class=\"GameDot6 GameDot\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dice;\r\n","C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\LittleCube\\LittleCube.js",[],"C:\\Users\\bouti\\OneDrive\\Documents\\web\\Issam Chaimae\\Dice Game\\testdice\\src\\Components\\GameScreen\\MessageArea\\MessageArea.js",["119"],"import React, { useContext, useEffect } from \"react\";\r\nimport \"./MessageArea.css\";\r\nimport { InfoContext } from \"../../../InfoContext/InfoContext\";\r\n\r\nexport default function MessageArea({\r\n  ChatRef,\r\n  setMessageHandler,\r\n  message,\r\n  messages,\r\n  onSendMessageHandler,\r\n  toggleMessageAreaActive,\r\n}) {\r\n  const { isHoster, HosterName, FriendName } = useContext(InfoContext);\r\n  const onCloseChatHandler = () => {\r\n    ChatRef.current.style.width = \"0\";\r\n    toggleMessageAreaActive();\r\n  };\r\n  useEffect(() => {\r\n    console.log(isHoster);\r\n  });\r\n  return (\r\n    <div id=\"mySideChat\" ref={ChatRef} className=\"sideChat\">\r\n      <a className=\"closebtn\" onClick={onCloseChatHandler}>\r\n        &times;\r\n      </a>\r\n      <div className=\"chat\">\r\n        <div className=\"chat-title\">\r\n          <h1>{isHoster ? FriendName : HosterName}</h1>\r\n        </div>\r\n        <div className=\"messages scrollbar\">\r\n          <div className=\"messages-content\">\r\n            <ul style={{ textDecoration: \"none\" }}>\r\n              {messages.map((mes) => {\r\n                if (mes.isHoster) {\r\n                  return (\r\n                    <li className=\"message message-personal\">{mes.Message}</li>\r\n                  );\r\n                } else {\r\n                  return <li className=\"message\">{mes.Message}</li>;\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"message-box\">\r\n          <textarea\r\n            value={message}\r\n            type=\"text\"\r\n            className=\"message-input\"\r\n            placeholder=\"Type message...\"\r\n            onChange={setMessageHandler}\r\n          ></textarea>\r\n          <button onClick={onSendMessageHandler} className=\"message-submit\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":32,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"126","severity":1,"message":"130","line":6,"column":18,"nodeType":"128","messageId":"129","endLine":6,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":93,"column":6,"nodeType":"133","endLine":93,"endColumn":8,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"127","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":110,"column":46,"nodeType":"137","messageId":"138","endLine":110,"endColumn":48},{"ruleId":"139","severity":1,"message":"140","line":25,"column":18,"nodeType":"133","messageId":"141","endLine":25,"endColumn":75},{"ruleId":"135","severity":1,"message":"136","line":76,"column":19,"nodeType":"137","messageId":"138","endLine":76,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":144,"column":11,"nodeType":"144","endLine":144,"endColumn":33},{"ruleId":"131","severity":1,"message":"145","line":20,"column":6,"nodeType":"133","endLine":20,"endColumn":8,"suggestions":"146"},{"ruleId":"131","severity":1,"message":"145","line":25,"column":6,"nodeType":"133","endLine":25,"endColumn":8,"suggestions":"147"},{"ruleId":"126","severity":1,"message":"148","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":23},{"ruleId":"126","severity":1,"message":"148","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":23,"column":7,"nodeType":"144","endLine":23,"endColumn":60},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setSocket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'RoomId', 'Socket', 'isHoster', 'setFriendId', 'setFriendName', and 'setHosterName'. Either include them or remove the dependency array.","ArrayExpression",["153"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setIsHoster'. Either include it or remove the dependency array.",["154"],["155"],"'useRef' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},"Update the dependencies array to be: [RoomId, Socket, isHoster, setFriendId, setFriendName, setHosterName]",{"range":"161","text":"162"},"Update the dependencies array to be: [setIsHoster]",{"range":"163","text":"164"},{"range":"165","text":"164"},[3116,3118],"[RoomId, Socket, isHoster, setFriendId, setFriendName, setHosterName]",[584,586],"[setIsHoster]",[614,616]]